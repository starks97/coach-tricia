---
import AboutCourse from "../components/about/AboutCourse.astro"
import FunFacts from "../components/about/FunFacts.astro"
import Hero from "../components/about/Hero.astro"
import Story from "../components/about/Story.astro"
import Layout from "../layouts/Layout.astro"

<<<<<<< HEAD
<<<<<<< HEAD
import { type AboutPageZodSchemaType, AboutPageSchema } from "@lib/db/models/about.ts"
import getPage from "@lib/db/queries/getPage.ts"
import getSEO from "@lib/db/queries/getSEO.ts"
=======
import { SectionSchema } from "~/lib/models/sections"
>>>>>>> cf2b7c4 (backend system)

import getSection from "@lib/queries/getSection.ts"
=======
import getPage from "~/lib/queries/getPage"
>>>>>>> e5b7640 (Feature[change the arquitecture of the queries and improve the scalability])

import getSEO from "@lib/queries/getSEO.ts"
import { AboutPageSchema } from "~/lib/models/about"

import { type pageStoreKeys } from "~/types"

const aboutId: pageStoreKeys = "about_page_id"

const data = await getPage(aboutId, "about", AboutPageSchema)

const seoData = await getSEO("seo_id", "seo", "about")

const { sections } = data

const heroData = sections.hero
const storyData = sections.story
const funFactsData = sections["fun-facts"]
const aboutCourseData = sections.enough

Astro.response.headers.set("Cache-Control", "public, s-maxage=300, stale-while-revalidate=3600")
---

<Layout
	title={seoData!.title}
	description={seoData!.description}
	image={heroData.image}
	keywords={seoData!.keywords}
>
	<Hero
		title={heroData.title}
		description={heroData.description}
		image={heroData.image}
		subtitle={heroData.subtitle}
	/>
	<Story first={storyData.first} second={storyData.second} />
	<FunFacts funFacts={funFactsData} />
	<AboutCourse
		title={aboutCourseData.title}
		aboutCourse={aboutCourseData.about_course}
		image={aboutCourseData.image}
	/>
</Layout>

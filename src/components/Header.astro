---
import Icon from "../components/Icon.astro"
import { menuPath } from "../consts"

const pathName = Astro.url.pathname
---

<header
	class={`tablet:px-12 tablet:py-5 laptop:px-16 laptop:py-5 flex items-center justify-evenly bg-[var(--color-cream)] px-10 py-5 ${pathName !== "/" ? "border-b-light-rose border-b-[2px]" : ""}`}
>
	<div class="flex w-full flex-col items-start gap-3">
		<h1 class="font-blackstone text-5xl">Tricia Rago</h1>
		<p class="font-figtree leading-regular text-sm font-thin uppercase">
			Conscious Relationship Coach
		</p>
	</div>

	<menu-button>
		<template>
			<button
				class="menu-button tablet:hidden text-black"
				aria-expanded="false"
				aria-label="Toggle menu"
			>
				<Icon icon="hamburger_menu" size="2em" color="black" />
			</button>
		</template>
	</menu-button>
	<noscript>
		<ul class="nav-items">
			{
				menuPath.map(([to, rout], index) => (
					<li class="group transition duration-300 ease-in-out">
						<a
							href={to}
							class="font-tajawal text-size-2 group-hover:text-terracotta tracking-widest text-black uppercase transition duration-300 ease-in-out group-hover:scale-105"
						>
							{rout}
						</a>
					</li>
				))
			}
		</ul>
	</noscript>

	<nav class="tablet:flex hidden w-full justify-end" id="menu-content">
		<ul class="tablet:flex-row tablet:gap-5 laptop:gap-10 flex flex-col gap-5">
			{
				menuPath.map(([to, rout], index) => (
					<li class="group transition duration-300 ease-in-out">
						<a
							href={to}
							class="font-tajawal text-size-2 group-hover:text-terracotta tracking-widest text-black uppercase transition duration-300 ease-in-out group-hover:scale-105"
						>
							{rout}
						</a>
					</li>
				))
			}
		</ul>
	</nav>
</header>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super()

			this.appendChild(this.querySelector("template").content.cloneNode(true))
			const btn = this.querySelector("button")

			const menu = document.getElementById("menu-content")
			menu.classList.add("hidden")

			const setExpanded = (expand: boolean) => {
				btn.setAttribute("aria-expanded", expand ? "true" : "false")
				menu.classList.toggle("hidden", !expand)
			}

			btn.addEventListener("click", () => setExpanded(menu.classList.contains("hidden")))

			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches)
				btn.hidden = e.matches
			}
			const mediaQueries = window.matchMedia("(min-width: 50em)")
			handleViewports(mediaQueries)
			mediaQueries.addEventListener("change", handleViewports)
		}
	}
	customElements.define("menu-button", MenuButton)
</script>
